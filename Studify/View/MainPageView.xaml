<Window x:Class="Studify.View.MainPageView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Studify.View"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
         Title="Window3" Height="760" Width="910" WindowStyle="None" WindowStartupLocation="CenterScreen" Foreground="{x:Null}" ResizeMode="NoResize" AllowsTransparency="True" Style="{DynamicResource Window}">
    <!--<Window.Resources>
        <Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="0.4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Grid>
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="10" Margin="0,0,0,0">
                                </Grid>
                            </AdornerDecorator>
                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="0.4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Grid>
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2"></Border>
                                     </Grid>
                            </AdornerDecorator>
                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="67"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="180"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="67"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>-->
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpenMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1" Grid.ColumnSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="147*"/>
                </Grid.RowDefinitions>
                <Frame x:Name="MainPage" NavigationUIVisibility="Hidden" Grid.RowSpan="2">
                </Frame>
            </Grid>
            <Grid x:Name="GridMenu" Width="67">
                <StackPanel x:Name="stackPanel"  Style="{DynamicResource Menu}">
                    <Grid Height="48" Style="{DynamicResource Grid1}">
                        <Button x:Name="ButtonCloseMenu" Width="60" Height="50" Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="Collapsed" Click="ButtonCloseMenu_Click">
                            <materialDesign:PackIcon Style="{DynamicResource Icon}"  Kind="ArrowLeft" Width="30" Height="30"/>
                        </Button>
                        <Button x:Name="ButtonOpenMenu" Width="60" Height="50" Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Top" HorizontalAlignment="Right" Click="ButtonOpenMenu_Click">
                            <materialDesign:PackIcon Style="{DynamicResource Icon}" Kind="Menu" VerticalAlignment="Center" Margin="-20"  Width="27" Height="27"/>
                        </Button>
                    </Grid>
                    <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListViewItem x:Name="Task_List" Height="70" PreviewMouseDown="Task_List_PreviewMouseDown">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Style="{DynamicResource Icon}"  Kind="RadioButtonUnchecked" Width="27" Height="27" Margin="8" VerticalAlignment="Center"/>
                                <TextBlock Text="Tasks" Style="{DynamicResource Text}"  VerticalAlignment="Center" Margin="20 10"/>
                            </StackPanel>
                        </ListViewItem>
                        <ListViewItem x:Name="Progress" Height="70" PreviewMouseDown="Progress_PreviewMouseDown">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Style="{DynamicResource Icon}" Kind="StarHalf" Width="27" Height="27" Margin="8" VerticalAlignment="Center"/>
                                <TextBlock Text="Progress" Style="{DynamicResource Text}" VerticalAlignment="Center" Margin="20 10"/>
                            </StackPanel>
                        </ListViewItem>
                        <ListViewItem Height="70" x:Name="TimeTable_List" PreviewMouseDown="TimeTable_List_PreviewMouseDown">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Style="{DynamicResource Icon}" Kind="EventNote" Width="27" Height="27" Margin="8" VerticalAlignment="Center"/>
                                <TextBlock Text="Timetable" Style="{DynamicResource Text}" VerticalAlignment="Center" Margin="20 10"/>
                            </StackPanel>
                        </ListViewItem>
                        <ListViewItem Height="70" x:Name="Message_List" PreviewMouseDown="Message_List_PreviewMouseDown">
                            <StackPanel Height="60" Orientation="Horizontal">
                                <materialDesign:Badged  Height="50" Margin="0 10 0 0" x:Name="Count_Message">
                                    <materialDesign:PackIcon Style="{DynamicResource Icon}" Kind="Email" Width="27" Height="27" Margin="8" VerticalAlignment="Center"/>
                                </materialDesign:Badged>
                                <TextBlock Text="Messages" Style="{DynamicResource Text}" VerticalAlignment="Center" Margin="20 10"/>
                            </StackPanel>
                        </ListViewItem>
                        <ListViewItem x:Name="Group_list" Height="70" Visibility="Hidden" PreviewMouseDown="Group_list_PreviewMouseDown">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Style="{DynamicResource Icon}" Kind="People" Width="27" Height="27" Margin="8" VerticalAlignment="Center"/>
                                <TextBlock Text="Group list" Style="{DynamicResource Text}" VerticalAlignment="Center" Margin="20 10"/>
                            </StackPanel>
                        </ListViewItem>
                    </ListView>
                </StackPanel>
            </Grid>

        </Grid>

        <Grid MouseDown="Grid_MouseDown" Style="{DynamicResource Grad}">
            <StackPanel Grid.Row="0" Width="150" HorizontalAlignment="Left"  Orientation="Horizontal">
                <Button HorizontalAlignment="Left" Height="12" VerticalAlignment="Top" Width="12" Margin="10 11 0 0" Style="{DynamicResource ButtonStyle1}" Background="#FFFF2E00" BorderBrush="#FFFF2E00" Click="Button_Click"/>
                <Button x:Name="Roll_Up" HorizontalAlignment="Left" Height="12" VerticalAlignment="Top" Width="12" Margin="7 11 0 0" Style="{DynamicResource ButtonStyle1}" Background="#FFFFC500" BorderBrush="#FFFFC500" Click="Roll_Up_Click"/>
                <Button x:Name="maxsizeButton" IsEnabled="False" HorizontalAlignment="Left" Height="12" VerticalAlignment="Top" Width="12" Margin="7 11 0 0" Style="{DynamicResource ButtonStyle1}" Background="#FF59D114" BorderBrush="#FF59D114" Click="MaxsizeButton_Click"/>
            </StackPanel>
            <ToggleButton IsChecked="False" Checked="Choose_Theme_Checked" Unchecked="Choose_Theme_Unchecked"  x:Name="Choose_Theme" Margin="0 0 40 0" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignSwitchToggleButton}"
  ToolTip="MaterialDesignSwitchToggleButton with Content and ToggleButtonAssist.OnContent" >
                <materialDesign:PackIcon Kind="WhiteBalanceSunny"/>
                <materialDesign:ToggleButtonAssist.OnContent>
                    <materialDesign:PackIcon Kind="PowerSleep" />
                </materialDesign:ToggleButtonAssist.OnContent>
            </ToggleButton>
            <materialDesign:PackIcon x:Name="Exit" PreviewMouseDown="Exit_PreviewMouseDown"  HorizontalAlignment="Right" Kind="ExitToApp" Width="30" VerticalAlignment="Center" Height="30" Style="{DynamicResource Icon}"></materialDesign:PackIcon>
        </Grid>
    </Grid>
</Window>
